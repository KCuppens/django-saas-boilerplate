# Generated by Django 4.2.24 on 2025-09-12 16:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                (
                    "key",
                    models.SlugField(
                        help_text="Unique key to identify this template",
                        max_length=100,
                        unique=True,
                        verbose_name="Template key",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Template name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "subject",
                    models.CharField(max_length=255, verbose_name="Email subject"),
                ),
                (
                    "html_content",
                    models.TextField(
                        help_text="HTML version of the email",
                        verbose_name="HTML content",
                    ),
                ),
                (
                    "text_content",
                    models.TextField(
                        help_text="Plain text version of the email",
                        verbose_name="Text content",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "category",
                    models.CharField(
                        default="general", max_length=50, verbose_name="Category"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="en", max_length=10, verbose_name="Language"
                    ),
                ),
                (
                    "template_variables",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="JSON object describing available template variables",
                        verbose_name="Template variables",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Template",
                "verbose_name_plural": "Email Templates",
                "ordering": ["category", "name"],
                "unique_together": {("key", "language")},
            },
        ),
        migrations.CreateModel(
            name="EmailMessageLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                (
                    "template_key",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Template key"
                    ),
                ),
                (
                    "to_email",
                    models.EmailField(max_length=254, verbose_name="To email"),
                ),
                (
                    "from_email",
                    models.EmailField(max_length=254, verbose_name="From email"),
                ),
                (
                    "cc",
                    models.TextField(
                        blank=True,
                        help_text="JSON array of email addresses",
                        verbose_name="CC recipients",
                    ),
                ),
                (
                    "bcc",
                    models.TextField(
                        blank=True,
                        help_text="JSON array of email addresses",
                        verbose_name="BCC recipients",
                    ),
                ),
                ("subject", models.CharField(max_length=255, verbose_name="Subject")),
                (
                    "html_content",
                    models.TextField(blank=True, verbose_name="HTML content"),
                ),
                (
                    "text_content",
                    models.TextField(blank=True, verbose_name="Text content"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("delivered", "Delivered"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "celery_task_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Celery task ID"
                    ),
                ),
                (
                    "context_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Template context data used",
                        verbose_name="Context data",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Error message"),
                ),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Sent at"),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered at"
                    ),
                ),
                (
                    "opened_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Opened at"
                    ),
                ),
                (
                    "clicked_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Clicked at"
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Template used (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="emails.emailtemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who triggered the email (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Email Message Log",
                "verbose_name_plural": "Email Message Logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status", "created_at"],
                        name="emails_emai_status_f33fba_idx",
                    ),
                    models.Index(
                        fields=["to_email", "created_at"],
                        name="emails_emai_to_emai_4da5d0_idx",
                    ),
                    models.Index(
                        fields=["template_key", "created_at"],
                        name="emails_emai_templat_463e21_idx",
                    ),
                ],
            },
        ),
    ]
